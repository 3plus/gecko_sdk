// This is an autogenerated config file, any changes to this file will be overwritten

#ifndef MBEDTLS_CONFIG_AUTOGEN_H
#define MBEDTLS_CONFIG_AUTOGEN_H

{% if mbedtls_mpi_max is defined %}
#define MBEDTLS_MPI_MAX_SIZE    {{mbedtls_mpi_max|max}}
{% endif  %}

{% for c in mbedtls_config -%}
#define {{c}}
{% endfor %}

#if defined(SL_TRUSTZONE_NONSECURE)
{% for c in mbedtls_config_trustzone_nonsecure -%}
#define {{c}}
{% endfor %}
#endif // #if defined(SL_TRUSTZONE_NONSECURE)

#if defined(SL_TRUSTZONE_SECURE)
{% for c in mbedtls_config_trustzone_secure -%}
#define {{c}}
{% endfor %}
#endif // #if defined(SL_TRUSTZONE_SECURE)

#include "config-device-acceleration.h"

// By default MBEDTLS_PLATFORM_CALLOC_MACRO and MBEDTLS_PLATFORM_FREE_MACRO are
// defined in mbedtls_platform_dynamic_memory_allocation_config_default.slcc.
// Alternative implementations can configure MBEDTLS_PLATFORM_CALLOC_MACRO and
// MBEDTLS_PLATFORM_FREE_MACRO to use other platform specific implementations.
// Alternatively some use cases may select runtime initialisation in the
// application by explicitly calling mbedtls_platform_set_calloc_free() by
// selecting mbedtls_platform_dynamic_memory_allocation_config_init_runtime.

#if defined(MBEDTLS_PLATFORM_CALLOC_MACRO) && defined(MBEDTLS_PLATFORM_FREE_MACRO)
#include <stddef.h>  // size_t
extern void *MBEDTLS_PLATFORM_CALLOC_MACRO( size_t n, size_t size );
extern void MBEDTLS_PLATFORM_FREE_MACRO( void *ptr );
#endif

{% for c in mbedtls_config_undefs -%}
#undef {{c}}
{% endfor %}

#endif
