// This is an autogenerated config file, any changes to this file will be overwritten

#ifndef PSA_CRYPTO_CONFIG_AUTOGEN_H
#define PSA_CRYPTO_CONFIG_AUTOGEN_H

{% for c in psa_crypto_config -%}
#define {{c}}
{% endfor %}

{%- set key_slot_names = psa_key_slots | map(attribute='name') | list %}
{%- if 'psa_key_slots_btmesh_stack' in key_slot_names %}
#include "sl_btmesh_config.h"
{%- endif %}
#define MBEDTLS_PSA_KEY_SLOT_COUNT ({{ psa_key_slots | join(' + ', attribute='count')}} + SL_PSA_KEY_USER_SLOT_COUNT)
#ifndef SL_PSA_ITS_MAX_FILES
#define SL_PSA_ITS_MAX_FILES ({{ psa_its_files | join(' + ', attribute='count')}} + SL_PSA_ITS_USER_MAX_FILES)
#endif

#if defined(TFM_CONFIG_SL_SECURE_LIBRARY)
// Asymmetric Crypt module (RSA is not supported)
#define TFM_CRYPTO_ASYM_ENCRYPT_MODULE_DISABLED

// HASH module
#if !defined(PSA_WANT_ALG_SHA_1) \
    && !defined(PSA_WANT_ALG_SHA_224) \
    && !defined(PSA_WANT_ALG_SHA_256) \
    && !defined(PSA_WANT_ALG_SHA_384) \
    && !defined(PSA_WANT_ALG_SHA_512) \
    && !defined(PSA_WANT_ALG_MD5)
#define TFM_CRYPTO_HASH_MODULE_DISABLED
#endif

// AEAD module
#if !defined(PSA_WANT_ALG_CCM) \
    && !defined(PSA_WANT_ALG_GCM) \
    && !defined(PSA_WANT_ALG_CHACHA20_POLY1305)
#define TFM_CRYPTO_AEAD_MODULE_DISABLED
#endif

// Asymmetric Sign module
#if !defined(PSA_WANT_ALG_ECDSA) \
    && !defined(PSA_WANT_ALG_EDDSA) \
    && !defined(PSA_WANT_ALG_DETERMINISTIC_ECDSA)
#define TFM_CRYPTO_ASYM_SIGN_MODULE_DISABLED
#endif

// Cipher module
#if !defined(PSA_WANT_ALG_CFB) \
    && !defined(PSA_WANT_ALG_CTR) \
    && !defined(PSA_WANT_ALG_CBC_NO_PADDING) \
    && !defined(PSA_WANT_ALG_CBC_PKCS7) \
    && !defined(PSA_WANT_ALG_ECB_NO_PADDING) \
    && !defined(PSA_WANT_ALG_XTS) \
    && !defined(PSA_WANT_ALG_OFB) \
    && !defined(PSA_WANT_ALG_STREAM_CIPHER)
#define TFM_CRYPTO_CIPHER_MODULE_DISABLED
#endif

// MAC module
#if !defined(PSA_WANT_ALG_HMAC) \
     && !defined(PSA_WANT_ALG_CMAC) \
     && !defined(PSA_WANT_ALG_CBC_MAC)
#define TFM_CRYPTO_MAC_MODULE_DISABLED
#endif

// Key derivation module
#if !defined(PSA_WANT_ALG_PBKDF2_HMAC) \
    && !defined(PSA_WANT_ALG_HKDF) \
    && !defined(PSA_WANT_ALG_PBKDF2_AES_CMAC_PRF_128) \
    && !defined(PSA_WANT_ALG_TLS12_PRF) \
    && !defined(PSA_WANT_ALG_TLS12_PSK_TO_MS) \
    && !defined(PSA_WANT_ALG_ECDH)
#define TFM_CRYPTO_KEY_DERIVATION_MODULE_DISABLED
#endif

#endif // TFM_CONFIG_SL_SECURE_LIBRARY

#endif
